<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.aladdin" />
<!--     <context:component-scan base-package="com.jsp.manage" /> -->
    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="${${dbType}.driver}" />
        <property name="url" value="${${dbType}.url}" />
        <property name="username" value="${${dbType}.username}" />
        <property name="password" value="${${dbType}.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}" />
        <!-- 连接池的最大值，同一时间可以从池分配的最多连接数量，0时无限制 默认值是8 -->
        <property name="maxTotal" value="${maxTotal}" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}" />
    </bean>
    <bean id="vendorProperties"
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">
       <property name="properties">
            <props>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
                <prop key="DM DBMS">dm</prop>
                <prop key="GBase 8s V8.4 Database Server">gbase</prop>
            </props>
        </property>
    </bean>
<!-- 多数据库支持  ，在xml 使用datebaseId  -->
    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties" />
    </bean>
    <!-- mybatis文件配置，扫描所有mapper文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="databaseIdProvider" ref="databaseIdProvider"/>
        <!-- mybatis全局配置文件 -->  
        <property name="configLocation" value="classpath:/mybatis-config.xml"></property>
        <!-- 扫描 xml文件 -->
        <property name="mapperLocations">
            <array>
                <value>classpath:/com/aladdin/**/**/*.xml</value>
               <!--  <value>classpath:/com/jsp/manage/org/**/*.xml</value> -->
            </array>
        </property>
    </bean>
    <!-- 配置SqlSessionTemplate -->  
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />  
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name = "dataSource" ref="dataSource"/>  
    </bean>

    <!-- 配置mybatis mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.aladdin.**.**.dao"/>
        
        <!--多个mapper接口配置  -->
<!--         <property name="basePackage" value="com.ieslab.cloudapp.**.dao;
                com.ieslab.cloudapp.org.dccorg.persistence;
                com.ieslab.cloudapp.org.maintorg.persistence"/> -->
        <property name="sqlSessionTemplateBeanName" value="sqlSessionTemplate"/>
    </bean>
     <!-- 定义事务 -->
    <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> -->

    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/> -->
</beans>